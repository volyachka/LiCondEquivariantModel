name: Pylint-and-Black

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - uses: actions/cache@v3
      with:
        path: /tmp/job_env
        key: pylint-and-black-env-cache
    - name: Environment setup
      run: |
        if [ ! -f /tmp/job_env/bin/activate ]; then
          python -m venv /tmp/job_env
          source /tmp/job_env/bin/activate
          pip install --upgrade pip
          pip install jupyter ipykernel
          pip install torch
          pip install -r requirements.txt
          git clone https://github.com/rusty1s/pytorch_scatter.git /tmp/pytorch_scatter && cd /tmp/pytorch_scatter && python setup.py install && cd -
          git clone https://github.com/rusty1s/pytorch_cluster.git /tmp/pytorch_cluster && cd /tmp/pytorch_cluster && python setup.py install && cd -
        else
          source /tmp/job_env/bin/activate
        fi
  main:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - uses: actions/cache@v3
      with:
        path: /tmp/job_env
        key: pylint-and-black-env-cache
    - name: Analysing the code with pylint
      run: |
        source /tmp/job_env/bin/activate
        python -m pylint $(git ls-files '*.py')
      continue-on-error: true
      id: step_pylint
    - name: Analysing the code with black
      run: |
        source /tmp/job_env/bin/activate
        python -m black --check $(git ls-files '*.py')
      continue-on-error: true
      id: step_black
    - name: Checking for errors
      run: |
        if [ "${{ steps.step_pylint.outcome }}" == "failure" ] || [ "${{ steps.step_black.outcome }}" == "failure" ]; then
          echo "pylint status: ${{ steps.step_pylint.outcome }}"
          echo "black status: ${{ steps.step_black.outcome }}"
          exit 1
        fi
